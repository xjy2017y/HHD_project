<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhd.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.hhd.pojo.UserInfo">
    <id column="userID" jdbcType="INTEGER" property="userid" />
    <result column="assPhone" jdbcType="VARCHAR" property="assphone" />
    <result column="userType" jdbcType="INTEGER" property="usertype" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="idCard" jdbcType="VARCHAR" property="idcard" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="cumLoginDays" jdbcType="INTEGER" property="cumlogindays" />
    <result column="conLoginDays" jdbcType="INTEGER" property="conlogindays" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="superiorID" jdbcType="INTEGER" property="superiorid"/>
  </resultMap>
  <sql id="Base_Column_List">
    userID, assPhone, userType, nickname, idCard, note, grade, cumLoginDays, conLoginDays, 
    lastLoginTime,superiorID
  </sql>
  <select id="selectByAssPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
  select *
  from userinfo
  where assPhone = #{assphone,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userID = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectIdByAssPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select userID from userinfo where assPhone = #{assphone,jdbcType=VARCHAR}
  </select>
  <select id="selectUserByIdList" resultMap="BaseResultMap">
  	select * from userinfo where userID in
  	<foreach collection="list" item="item" open="(" separator="," close=")">
  	#{item}
  	</foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where userID = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hhd.pojo.UserInfo">
    insert into userinfo (userID, assPhone, userType, 
      nickname, idCard, note, 
      grade, cumLoginDays, conLoginDays, 
      lastLoginTime,superiorID)
    values (#{userid,jdbcType=INTEGER}, #{assphone,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{cumlogindays,jdbcType=INTEGER}, #{conlogindays,jdbcType=INTEGER}, 
      #{lastlogintime,jdbcType=TIMESTAMP},#{superiorid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hhd.pojo.UserInfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="assphone != null">
        assPhone,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="cumlogindays != null">
        cumLoginDays,
      </if>
      <if test="conlogindays != null">
        conLoginDays,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="superiorid != null">
        superiorID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="assphone != null">
        #{assphone,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="cumlogindays != null">
        #{cumlogindays,jdbcType=INTEGER},
      </if>
      <if test="conlogindays != null">
        #{conlogindays,jdbcType=INTEGER},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="superiorid != null">
        #{superiorid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.hhd.pojo.UserInfo">
    update userinfo
    <set>
      <if test="assphone != null">
        assPhone = #{assphone,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="cumlogindays != null">
        cumLoginDays = #{cumlogindays,jdbcType=INTEGER},
      </if>
      <if test="conlogindays != null">
        conLoginDays = #{conlogindays,jdbcType=INTEGER},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="superiorid != null">
      	superiorID = #{superiorid,jdbcType=INTEGER},
      </if>
    </set>
    where userID = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhd.pojo.UserInfo">
    update userinfo
    set assPhone = #{assphone,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      idCard = #{idcard,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      cumLoginDays = #{cumlogindays,jdbcType=INTEGER},
      conLoginDays = #{conlogindays,jdbcType=INTEGER},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      superiorID = #{superiorid,jdbcType=INTEGER}
    where userID = #{userid,jdbcType=INTEGER}
  </update>
</mapper>